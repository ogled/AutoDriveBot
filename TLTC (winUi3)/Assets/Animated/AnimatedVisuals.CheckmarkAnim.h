#pragma once
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           8.1.240821.1+077322fa26
//       
//       Command:
//           LottieGen -Language Cppwinrt -WinUIVersion 3.0 -InputFile checkmarkAnim.json
//       
//       Input file:
//           checkmarkAnim.json (9803 bytes created 9:54+09:00 May 1 2025)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#include "AnimatedVisuals.CheckmarkAnim.g.h"

namespace winrt::AnimatedVisuals
{
    // Name:        done
    // Frame rate:  24 fps
    // Frame count: 28
    // Duration:    1166.7 mS
    namespace implementation
    {
        class CheckmarkAnim
            : public CheckmarkAnimT<CheckmarkAnim>
        {
        public:
            // Animation duration: 1.167 seconds.
            static constexpr int64_t c_durationTicks{ 11666666L };

            winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual TryCreateAnimatedVisual(
                winrt::Microsoft::UI::Composition::Compositor const& compositor);

            winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual TryCreateAnimatedVisual(
                winrt::Microsoft::UI::Composition::Compositor const& compositor,
                winrt::Windows::Foundation::IInspectable& diagnostics);

            // Gets the number of frames in the animation.
            double FrameCount();

            // Gets the framerate of the animation.
            double Framerate();

            // Gets the duration of the animation.
            winrt::Windows::Foundation::TimeSpan Duration();

            // Converts a zero-based frame number to the corresponding progress value denoting the
            // start of the frame.
            double FrameToProgress(double frameNumber);

            // Returns a map from marker names to corresponding progress values.
            winrt::Windows::Foundation::Collections::IMapView<hstring, double> Markers();

            // Sets the color property with the given name, or does nothing if no such property
            // exists.
            void SetColorProperty(hstring const& propertyName, winrt::Windows::UI::Color value);

            // Sets the scalar property with the given name, or does nothing if no such property
            // exists.
            void SetScalarProperty(hstring const& propertyName, double value);
        };
    }

    namespace factory_implementation
    {
        struct CheckmarkAnim : CheckmarkAnimT<CheckmarkAnim, implementation::CheckmarkAnim>
        {
        };
    }
}
